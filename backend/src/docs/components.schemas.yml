components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          example: 64f1c2a9b3a1f2c4d5e6f789
        username:
          type: string
          example: johndoe
        email:
          type: string
          format: email
          example: john@example.com
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        fullName:
          type: string
          example: John Doe
        avatar:
          type: string
          nullable: true
        isEmailVerified:
          type: boolean
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    AuthTokens:
      type: object
      properties:
        accessToken:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        refreshToken:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
    AuthResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        tokens:
          $ref: '#/components/schemas/AuthTokens'
    Movie:
      type: object
      properties:
        id:
          type: integer
          example: 550
        title:
          type: string
          example: Fight Club
        poster_path:
          type: string
          example: /pB8BM7pdXLXbZVZC3N8sx8/FightClub.jpg
        overview:
          type: string
          example: A ticking-time-bomb insomniac...
        release_date:
          type: string
          format: date
          example: '1999-10-15'
        vote_average:
          type: number
          format: float
          example: 8.4
        genre_ids:
          type: array
          items:
            type: integer
            example: 28
    MovieListResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Movies fetched successfully
        data:
          type: array
          items:
            $ref: '#/components/schemas/Movie'
        meta:
          type: object
          properties:
            page:
              type: integer
              example: 1
            limit:
              type: integer
              example: 20
            total:
              type: integer
              example: 100
            totalPages:
              type: integer
              example: 5
    MovieDetailResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Movie details fetched successfully
        data:
          allOf:
            - $ref: '#/components/schemas/Movie'
            - type: object
              properties:
                backdrop_path:
                  type: string
                  example: /fCayJykfCDwpgsEpm3coghzFgC9.jpg
                genres:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                runtime:
                  type: integer
                  example: 139
                tagline:
                  type: string
                  example: Mischief. Mayhem. Soap.
    CreateOrUpdateRatingRequest:
      type: object
      required:
        - rating
      properties:
        rating:
          type: number
          format: float
          minimum: 1
          maximum: 5
          description: The user's rating for the movie (1-5).
          example: 4.5
        review:
          type: string
          description: An optional review text for the movie.
          example: A truly captivating film with a brilliant plot twist.
          maxLength: 1000
    RatingReview:
      type: object
      properties:
        _id:
          type: string
          example: 654c600f1c320d8f78d672a1
        userId:
          type: string
          example: 654c600f1c320d8f78d672a0
        movieId:
          type: integer
          example: 550
        rating:
          type: number
          format: float
          example: 4.5
        review:
          type: string
          example: A truly captivating film with a brilliant plot twist.
        createdAt:
          type: string
          format: date-time
          example: '2023-11-08T12:00:00.000Z'
        updatedAt:
          type: string
          format: date-time
          example: '2023-11-08T12:00:00.000Z'
    RatingReviewResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Rating and review submitted successfully
        data:
          $ref: '#/components/schemas/RatingReview'
    UpdateUserProfileRequest:
      type: object
      properties:
        firstName:
          type: string
          example: Jane
        lastName:
          type: string
          example: Doe
        username:
          type: string
          example: janedoe
        email:
          type: string
          format: email
          example: jane.doe@example.com
        avatar:
          type: string
          nullable: true
          example: https://example.com/avatar/janedoe.jpg
    UserProfileResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: User profile fetched successfully
        data:
          $ref: '#/components/schemas/User'
    GenericSuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Operation completed successfully
    CreateWatchlistRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: My Watchlist
        description:
          type: string
          example: A list of movies I want to watch.
          nullable: true
    UpdateWatchlistRequest:
      type: object
      properties:
        name:
          type: string
          example: My Updated Watchlist
        description:
          type: string
          example: An updated list of movies I want to watch.
          nullable: true
    Watchlist:
      type: object
      properties:
        _id:
          type: string
          example: 64f1c2a9b3a1f2c4d5e6f790
        userId:
          type: string
          example: 64f1c2a9b3a1f2c4d5e6f789
        name:
          type: string
          example: My Watchlist
        movies:
          type: array
          items:
            type: integer
            example: 550
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    WatchlistResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Watchlist created successfully
        data:
          $ref: '#/components/schemas/Watchlist'
    WatchlistListResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: User watchlists fetched successfully
        data:
          type: array
          items:
            $ref: '#/components/schemas/Watchlist'
  responses:
    ServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string
                example: InternalServerError
              message:
                type: string
                example: Something went wrong on the server.
    ValidationError:
      description: Validation Error
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string
                example: ValidationError
              message:
                type: string
                example: Invalid input provided.
              details:
                type: array
                items:
                  type: object
                  properties:
                    path:
                      type: string
                      example: query.page
                    message:
                      type: string
                      example: 'Page must be a positive integer'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string
                example: NotFoundError
              message:
                type: string
                example: Resource not found.
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string
                example: UnauthorizedError
              message:
                type: string
                example: Authentication required.
