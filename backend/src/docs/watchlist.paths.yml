paths:
  /users/watchlists:
    post:
      summary: Create a new watchlist for a user
      operationId: createWatchlist
      tags:
        - Watchlists
      description: Creates a new watchlist for the authenticated user.
      security:
        - bearerAuth: []
      requestBody:
        description: Watchlist details.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWatchlistRequest'
      responses:
        '201':
          description: Watchlist created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchlistResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

    get:
      summary: Get all watchlists for a user
      operationId: getUserWatchlists
      tags:
        - Watchlists
      description: Retrieves all watchlists belonging to the authenticated user.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved user's watchlists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchlistListResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'

  /users/watchlists/{watchlistId}:
    get:
      summary: Get a specific watchlist by ID
      operationId: getWatchlistById
      tags:
        - Watchlists
      description: Retrieves a single watchlist by its ID for the authenticated user.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: watchlistId
          schema:
            type: string
            format: uuid
          required: true
          description: The ID of the watchlist to retrieve.
      responses:
        '200':
          description: Successfully retrieved the watchlist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchlistResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

    put:
      summary: Update a specific watchlist
      operationId: updateWatchlist
      tags:
        - Watchlists
      description: Updates an existing watchlist for the authenticated user.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: watchlistId
          schema:
            type: string
            format: uuid
          required: true
          description: The ID of the watchlist to update.
      requestBody:
        description: Updated watchlist details.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWatchlistRequest'
      responses:
        '200':
          description: Watchlist updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchlistResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

    delete:
      summary: Delete a specific watchlist
      operationId: deleteWatchlist
      tags:
        - Watchlists
      description: Deletes a watchlist by its ID for the authenticated user.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: watchlistId
          schema:
            type: string
            format: uuid
          required: true
          description: The ID of the watchlist to delete.
      responses:
        '200':
          description: Watchlist deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

  /users/watchlists/{watchlistId}/movies/{movieId}:
    post:
      summary: Add a movie to a specific watchlist
      operationId: addMovieToWatchlist
      tags:
        - Watchlists
      description: Adds a movie to a specified watchlist for the authenticated user.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: watchlistId
          schema:
            type: string
            format: uuid
          required: true
          description: The ID of the watchlist to add the movie to.
        - in: path
          name: movieId
          schema:
            type: integer
            format: int32
          required: true
          description: The TMDB ID of the movie to add.
      responses:
        '200':
          description: Movie added to watchlist successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Watchlist or movie not found.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

    delete:
      summary: Remove a movie from a specific watchlist
      operationId: removeMovieFromWatchlist
      tags:
        - Watchlists
      description: Removes a movie from a specified watchlist for the authenticated user.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: watchlistId
          schema:
            type: string
            format: uuid
          required: true
          description: The ID of the watchlist to remove the movie from.
        - in: path
          name: movieId
          schema:
            type: integer
            format: int32
          required: true
          description: The TMDB ID of the movie to remove.
      responses:
        '200':
          description: Movie removed from watchlist successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Watchlist or movie not found in watchlist.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'
